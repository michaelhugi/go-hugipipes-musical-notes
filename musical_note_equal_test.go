package go_hugipipes_musical_notes

import (
	tu "github.com/informaticon/lib.go.base.test-utils"
	"testing"
)

func TestMNoteEqualInterface(t *testing.T) {
	n := MNoteEqual{}
	checkMNInterface(n)
}

func TestMNOteEqual440(t *testing.T) {
	te := NewMTemperamentEqual(440)
	dis6, err := te.NoteFromFrequency(620.0)
	tu.AssertNErr(err)
	tu.AssertEq(dis6.MidiNoteNumber(), 75, t)

	o8 := te.Octave(Octave8)
	n8 := o8.AllNotes()
	tu.AssertEq(len(n8), 12, t)
	c8 := n8[0]
	cis8 := n8[1]
	d8 := n8[2]
	dis8 := n8[3]
	e8 := n8[4]
	f8 := n8[5]
	fis8 := n8[6]
	g8 := n8[7]
	gis8 := n8[8]
	a8 := n8[9]
	ais8 := n8[10]
	b8 := n8[11]

	tu.AssertEq(c8.MidiNoteNumber(), 108, t)
	tu.AssertEq(roundFloat(c8.LowerFrequency(), 2), 4066.84, t)
	tu.AssertEq(roundFloat(c8.ExactFrequency(), 2), 4186.01, t)
	tu.AssertEq(roundFloat(c8.UpperFrequency(), 2), 4308.67, t)
	tu.AssertEq(c8.String(), "C8", t)
	tu.AssertEq(c8.Note(), C, t)
	tu.AssertEq(cis8.MidiNoteNumber(), 109, t)
	tu.AssertEq(roundFloat(cis8.LowerFrequency(), 2), 4308.67, t)
	tu.AssertEq(roundFloat(cis8.ExactFrequency(), 2), 4434.92, t)
	tu.AssertEq(roundFloat(cis8.UpperFrequency(), 2), 4564.88, t)
	tu.AssertEq(cis8.String(), "C#8", t)
	tu.AssertEq(cis8.Note(), Cis, t)
	tu.AssertEq(d8.MidiNoteNumber(), 110, t)
	tu.AssertEq(roundFloat(d8.LowerFrequency(), 2), 4564.88, t)
	tu.AssertEq(roundFloat(d8.ExactFrequency(), 2), 4698.64, t)
	tu.AssertEq(roundFloat(d8.UpperFrequency(), 2), 4836.32, t)
	tu.AssertEq(d8.String(), "D8", t)
	tu.AssertEq(d8.Note(), D, t)
	tu.AssertEq(dis8.MidiNoteNumber(), 111, t)
	tu.AssertEq(roundFloat(dis8.LowerFrequency(), 2), 4836.32, t)
	tu.AssertEq(roundFloat(dis8.ExactFrequency(), 2), 4978.03, t)
	tu.AssertEq(roundFloat(dis8.UpperFrequency(), 2), 5123.9, t)
	tu.AssertEq(dis8.String(), "D#8", t)
	tu.AssertEq(dis8.Note(), Dis, t)
	tu.AssertEq(e8.MidiNoteNumber(), 112, t)
	tu.AssertEq(roundFloat(e8.LowerFrequency(), 2), 5123.9, t)
	tu.AssertEq(roundFloat(e8.ExactFrequency(), 2), 5274.04, t)
	tu.AssertEq(roundFloat(e8.UpperFrequency(), 2), 5428.58, t)
	tu.AssertEq(e8.String(), "E8", t)
	tu.AssertEq(e8.Note(), E, t)
	tu.AssertEq(f8.MidiNoteNumber(), 113, t)
	tu.AssertEq(roundFloat(f8.LowerFrequency(), 2), 5428.58, t)
	tu.AssertEq(roundFloat(f8.ExactFrequency(), 2), 5587.65, t)
	tu.AssertEq(roundFloat(f8.UpperFrequency(), 2), 5751.38, t)
	tu.AssertEq(f8.String(), "F8", t)
	tu.AssertEq(f8.Note(), F, t)
	tu.AssertEq(fis8.MidiNoteNumber(), 114, t)
	tu.AssertEq(roundFloat(fis8.LowerFrequency(), 2), 5751.38, t)
	tu.AssertEq(roundFloat(fis8.ExactFrequency(), 2), 5919.91, t)
	tu.AssertEq(roundFloat(fis8.UpperFrequency(), 2), 6093.38, t)
	tu.AssertEq(fis8.String(), "F#8", t)
	tu.AssertEq(fis8.Note(), Fis, t)
	tu.AssertEq(g8.MidiNoteNumber(), 115, t)
	tu.AssertEq(roundFloat(g8.LowerFrequency(), 2), 6093.38, t)
	tu.AssertEq(roundFloat(g8.ExactFrequency(), 2), 6271.93, t)
	tu.AssertEq(roundFloat(g8.UpperFrequency(), 2), 6455.71, t)
	tu.AssertEq(g8.String(), "G8", t)
	tu.AssertEq(g8.Note(), G, t)
	tu.AssertEq(gis8.MidiNoteNumber(), 116, t)
	tu.AssertEq(roundFloat(gis8.LowerFrequency(), 2), 6455.71, t)
	tu.AssertEq(roundFloat(gis8.ExactFrequency(), 2), 6644.88, t)
	tu.AssertEq(roundFloat(gis8.UpperFrequency(), 2), 6839.58, t)
	tu.AssertEq(gis8.String(), "G#8", t)
	tu.AssertEq(gis8.Note(), Gis, t)
	tu.AssertEq(a8.MidiNoteNumber(), 117, t)
	tu.AssertEq(roundFloat(a8.LowerFrequency(), 2), 6839.58, t)
	tu.AssertEq(roundFloat(a8.ExactFrequency(), 2), 7040.00, t)
	tu.AssertEq(roundFloat(a8.UpperFrequency(), 2), 7246.29, t)
	tu.AssertEq(a8.String(), "A8", t)
	tu.AssertEq(a8.Note(), A, t)
	tu.AssertEq(ais8.MidiNoteNumber(), 118, t)
	tu.AssertEq(roundFloat(ais8.LowerFrequency(), 2), 7246.29, t)
	tu.AssertEq(roundFloat(ais8.ExactFrequency(), 2), 7458.62, t)
	tu.AssertEq(roundFloat(ais8.UpperFrequency(), 2), 7677.17, t)
	tu.AssertEq(ais8.String(), "A#8", t)
	tu.AssertEq(ais8.Note(), Ais, t)
	tu.AssertEq(b8.MidiNoteNumber(), 119, t)
	tu.AssertEq(roundFloat(b8.LowerFrequency(), 2), 7677.17, t)
	tu.AssertEq(roundFloat(b8.ExactFrequency(), 2), 7902.13, t)
	tu.AssertEq(roundFloat(b8.UpperFrequency(), 2), 8133.68, t)
	tu.AssertEq(b8.String(), "B8", t)
	tu.AssertEq(b8.Note(), B, t)

	tu.Assert(ais8.FrequencyBelongsToNote(7430.0), t)
	tu.Assert(!ais8.FrequencyBelongsToNote(7750.0), t)
	tu.Assert(!ais8.FrequencyBelongsToNote(6800.0), t)

	tu.AssertEq(a8.Octave().Octave(), Octave8, t)

	tu.AssertEq(roundFloat(ais8.OffsetInCents(7458.62), 0), 0, t)
	tu.AssertEq(roundFloat(ais8.OffsetInCents(7400), 0), -14, t)
	tu.AssertEq(roundFloat(ais8.OffsetInCents(7500), 0), 10, t)

}

func TestMNOteEqual450(t *testing.T) {
	te := NewMTemperamentEqual(450)
	dis6, err := te.NoteFromFrequency(620.0)
	tu.AssertNErr(err)
	tu.AssertEq(dis6.MidiNoteNumber(), 75, t)

	o8 := te.Octave(Octave8)
	c8 := o8.Note(C)
	cis8 := o8.Note(Cis)
	d8 := o8.Note(D)
	dis8 := o8.Note(Dis)
	e8 := o8.Note(E)
	f8 := o8.Note(F)
	fis8 := o8.Note(Fis)
	g8 := o8.Note(G)
	gis8 := o8.Note(Gis)
	a8 := o8.Note(A)
	ais8 := o8.Note(Ais)
	b8 := o8.Note(B)

	tu.AssertEq(c8.MidiNoteNumber(), 108, t)
	tu.AssertEq(roundFloat(c8.LowerFrequency(), 2), 4159.27, t)
	tu.AssertEq(roundFloat(c8.ExactFrequency(), 2), 4281.15, t)
	tu.AssertEq(roundFloat(c8.UpperFrequency(), 2), 4406.59, t)
	tu.AssertEq(c8.String(), "C8", t)
	tu.AssertEq(c8.Note(), C, t)
	tu.AssertEq(cis8.MidiNoteNumber(), 109, t)
	tu.AssertEq(roundFloat(cis8.LowerFrequency(), 2), 4406.59, t)
	tu.AssertEq(roundFloat(cis8.ExactFrequency(), 2), 4535.72, t)
	tu.AssertEq(roundFloat(cis8.UpperFrequency(), 2), 4668.62, t)
	tu.AssertEq(cis8.String(), "C#8", t)
	tu.AssertEq(cis8.Note(), Cis, t)
	tu.AssertEq(d8.MidiNoteNumber(), 110, t)
	tu.AssertEq(roundFloat(d8.LowerFrequency(), 2), 4668.62, t)
	tu.AssertEq(roundFloat(d8.ExactFrequency(), 2), 4805.42, t)
	tu.AssertEq(roundFloat(d8.UpperFrequency(), 2), 4946.23, t)
	tu.AssertEq(d8.String(), "D8", t)
	tu.AssertEq(d8.Note(), D, t)
	tu.AssertEq(dis8.MidiNoteNumber(), 111, t)
	tu.AssertEq(roundFloat(dis8.LowerFrequency(), 2), 4946.23, t)
	tu.AssertEq(roundFloat(dis8.ExactFrequency(), 2), 5091.17, t)
	tu.AssertEq(roundFloat(dis8.UpperFrequency(), 2), 5240.35, t)
	tu.AssertEq(dis8.String(), "D#8", t)
	tu.AssertEq(dis8.Note(), Dis, t)
	tu.AssertEq(e8.MidiNoteNumber(), 112, t)
	tu.AssertEq(roundFloat(e8.LowerFrequency(), 2), 5240.35, t)
	tu.AssertEq(roundFloat(e8.ExactFrequency(), 2), 5393.91, t)
	tu.AssertEq(roundFloat(e8.UpperFrequency(), 2), 5551.96, t)
	tu.AssertEq(e8.String(), "E8", t)
	tu.AssertEq(e8.Note(), E, t)
	tu.AssertEq(f8.MidiNoteNumber(), 113, t)
	tu.AssertEq(roundFloat(f8.LowerFrequency(), 2), 5551.96, t)
	tu.AssertEq(roundFloat(f8.ExactFrequency(), 2), 5714.64, t)
	tu.AssertEq(roundFloat(f8.UpperFrequency(), 2), 5882.1, t)
	tu.AssertEq(f8.String(), "F8", t)
	tu.AssertEq(f8.Note(), F, t)
	tu.AssertEq(fis8.MidiNoteNumber(), 114, t)
	tu.AssertEq(roundFloat(fis8.LowerFrequency(), 2), 5882.1, t)
	tu.AssertEq(roundFloat(fis8.ExactFrequency(), 2), 6054.45, t)
	tu.AssertEq(roundFloat(fis8.UpperFrequency(), 2), 6231.86, t)
	tu.AssertEq(fis8.String(), "F#8", t)
	tu.AssertEq(fis8.Note(), Fis, t)
	tu.AssertEq(g8.MidiNoteNumber(), 115, t)
	tu.AssertEq(roundFloat(g8.LowerFrequency(), 2), 6231.86, t)
	tu.AssertEq(roundFloat(g8.ExactFrequency(), 2), 6414.47, t)
	tu.AssertEq(roundFloat(g8.UpperFrequency(), 2), 6602.43, t)
	tu.AssertEq(g8.String(), "G8", t)
	tu.AssertEq(g8.Note(), G, t)
	tu.AssertEq(gis8.MidiNoteNumber(), 116, t)
	tu.AssertEq(roundFloat(gis8.LowerFrequency(), 2), 6602.43, t)
	tu.AssertEq(roundFloat(gis8.ExactFrequency(), 2), 6795.9, t)
	tu.AssertEq(roundFloat(gis8.UpperFrequency(), 2), 6995.03, t)
	tu.AssertEq(gis8.String(), "G#8", t)
	tu.AssertEq(gis8.Note(), Gis, t)
	tu.AssertEq(a8.MidiNoteNumber(), 117, t)
	tu.AssertEq(roundFloat(a8.LowerFrequency(), 2), 6995.03, t)
	tu.AssertEq(roundFloat(a8.ExactFrequency(), 2), 7200, t)
	tu.AssertEq(roundFloat(a8.UpperFrequency(), 2), 7410.98, t)
	tu.AssertEq(a8.String(), "A8", t)
	tu.AssertEq(a8.Note(), A, t)
	tu.AssertEq(ais8.MidiNoteNumber(), 118, t)
	tu.AssertEq(roundFloat(ais8.LowerFrequency(), 2), 7410.98, t)
	tu.AssertEq(roundFloat(ais8.ExactFrequency(), 2), 7628.13, t)
	tu.AssertEq(roundFloat(ais8.UpperFrequency(), 2), 7851.66, t)
	tu.AssertEq(ais8.String(), "A#8", t)
	tu.AssertEq(ais8.Note(), Ais, t)
	tu.AssertEq(b8.MidiNoteNumber(), 119, t)
	tu.AssertEq(roundFloat(b8.LowerFrequency(), 2), 7851.66, t)
	tu.AssertEq(roundFloat(b8.ExactFrequency(), 2), 8081.73, t)
	tu.AssertEq(roundFloat(b8.UpperFrequency(), 2), 8318.54, t)
	tu.AssertEq(b8.String(), "B8", t)
	tu.AssertEq(b8.Note(), B, t)

	tu.Assert(ais8.FrequencyBelongsToNote(7628.13), t)
	tu.Assert(!ais8.FrequencyBelongsToNote(7410), t)
	tu.Assert(!ais8.FrequencyBelongsToNote(7852), t)

	tu.AssertEq(a8.Octave().Octave(), Octave8, t)

	tu.AssertEq(roundFloat(ais8.OffsetInCents(7628.13), 0), 0, t)
	tu.AssertEq(roundFloat(ais8.OffsetInCents(7590), 0), -9, t)
	tu.AssertEq(roundFloat(ais8.OffsetInCents(7660), 0), 7, t)

}
