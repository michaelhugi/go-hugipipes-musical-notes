package go_hugipipes_musical_notes

import (
	tu "github.com/informaticon/lib.go.base.test-utils"
	"math"
	"testing"
)

const (
	scaleJust1  = 16.0 / 15.0
	scaleJust2  = 9.0 / 8.0
	scaleJust3  = 6.0 / 5.0
	scaleJust4  = 5.0 / 4.0
	scaleJust5  = 4.0 / 3.0
	scaleJust6  = 45.0 / 32.0
	scaleJust7  = 3.0 / 2.0
	scaleJust8  = 8.0 / 5.0
	scaleJust9  = 5.0 / 3.0
	scaleJust10 = 9.0 / 5.0
	scaleJust11 = 15.0 / 8.0
)

func TestToBaseNote(t *testing.T) {
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(C, NewSimpleNote(C, 10)), 2), roundFloat(10.0, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(C, NewSimpleNote(Cis, 10)), 2), roundFloat(10.0/scaleJust1, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(C, NewSimpleNote(D, 10)), 2), roundFloat(10/scaleJust2, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(C, NewSimpleNote(Dis, 10)), 2), roundFloat(10.0/scaleJust3, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(C, NewSimpleNote(E, 10)), 2), roundFloat(10.0/scaleJust4, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(C, NewSimpleNote(F, 10)), 2), roundFloat(10.0/scaleJust5, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(C, NewSimpleNote(Fis, 10)), 2), roundFloat(10.0/scaleJust6, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(C, NewSimpleNote(G, 10)), 2), roundFloat(10.0/scaleJust7, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(C, NewSimpleNote(Gis, 10)), 2), roundFloat(10.0/scaleJust8, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(C, NewSimpleNote(A, 440)), 2), roundFloat(264, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(C, NewSimpleNote(Ais, 10)), 2), roundFloat(10.0/scaleJust10, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(C, NewSimpleNote(B, 10)), 2), roundFloat(10.0/scaleJust11, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Cis, NewSimpleNote(Cis, 10)), 2), roundFloat(10.0, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Cis, NewSimpleNote(D, 10)), 2), roundFloat(10.0/scaleJust1, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Cis, NewSimpleNote(Dis, 10)), 2), roundFloat(10.0/scaleJust2, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Cis, NewSimpleNote(E, 10)), 2), roundFloat(10.0/scaleJust3, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Cis, NewSimpleNote(F, 10)), 2), roundFloat(10.0/scaleJust4, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Cis, NewSimpleNote(Fis, 10)), 2), roundFloat(10.0/scaleJust5, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Cis, NewSimpleNote(G, 10)), 2), roundFloat(10.0/scaleJust6, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Cis, NewSimpleNote(Gis, 10)), 2), roundFloat(10.0/scaleJust7, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Cis, NewSimpleNote(A, 10)), 2), roundFloat(10.0/scaleJust8, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Cis, NewSimpleNote(Ais, 10)), 2), roundFloat(10.0/scaleJust9, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Cis, NewSimpleNote(B, 10)), 2), roundFloat(10.0/scaleJust10, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Cis, NewSimpleNote(C, 10)), 2), roundFloat(20.0/scaleJust11, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(D, NewSimpleNote(D, 10)), 2), roundFloat(10.0, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(D, NewSimpleNote(Dis, 10)), 2), roundFloat(10.0/scaleJust1, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(D, NewSimpleNote(E, 10)), 2), roundFloat(10.0/scaleJust2, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(D, NewSimpleNote(F, 10)), 2), roundFloat(10.0/scaleJust3, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(D, NewSimpleNote(Fis, 10)), 2), roundFloat(10.0/scaleJust4, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(D, NewSimpleNote(G, 10)), 2), roundFloat(10.0/scaleJust5, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(D, NewSimpleNote(Gis, 10)), 2), roundFloat(10.0/scaleJust6, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(D, NewSimpleNote(A, 10)), 2), roundFloat(10.0/scaleJust7, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(D, NewSimpleNote(Ais, 10)), 2), roundFloat(10.0/scaleJust8, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(D, NewSimpleNote(B, 10)), 2), roundFloat(10.0/scaleJust9, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(D, NewSimpleNote(C, 10)), 2), roundFloat(20.0/scaleJust10, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(D, NewSimpleNote(Cis, 10)), 2), roundFloat(20.0/scaleJust11, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Dis, NewSimpleNote(Dis, 10)), 2), roundFloat(10.0, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Dis, NewSimpleNote(E, 10)), 2), roundFloat(10.0/scaleJust1, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Dis, NewSimpleNote(F, 10)), 2), roundFloat(10.0/scaleJust2, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Dis, NewSimpleNote(Fis, 10)), 2), roundFloat(10.0/scaleJust3, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Dis, NewSimpleNote(G, 10)), 2), roundFloat(10.0/scaleJust4, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Dis, NewSimpleNote(Gis, 10)), 2), roundFloat(10.0/scaleJust5, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Dis, NewSimpleNote(A, 10)), 2), roundFloat(10.0/scaleJust6, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Dis, NewSimpleNote(Ais, 10)), 2), roundFloat(10.0/scaleJust7, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Dis, NewSimpleNote(B, 10)), 2), roundFloat(10.0/scaleJust8, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Dis, NewSimpleNote(C, 10)), 2), roundFloat(20.0/scaleJust9, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Dis, NewSimpleNote(Cis, 10)), 2), roundFloat(20.0/scaleJust10, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Dis, NewSimpleNote(D, 10)), 2), roundFloat(20.0/scaleJust11, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(E, NewSimpleNote(E, 10)), 2), roundFloat(10.0, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(E, NewSimpleNote(F, 10)), 2), roundFloat(10.0/scaleJust1, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(E, NewSimpleNote(Fis, 10)), 2), roundFloat(10.0/scaleJust2, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(E, NewSimpleNote(G, 10)), 2), roundFloat(10.0/scaleJust3, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(E, NewSimpleNote(Gis, 10)), 2), roundFloat(10.0/scaleJust4, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(E, NewSimpleNote(A, 10)), 2), roundFloat(10.0/scaleJust5, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(E, NewSimpleNote(Ais, 10)), 2), roundFloat(10.0/scaleJust6, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(E, NewSimpleNote(B, 10)), 2), roundFloat(10.0/scaleJust7, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(E, NewSimpleNote(C, 10)), 2), roundFloat(20.0/scaleJust8, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(E, NewSimpleNote(Cis, 10)), 2), roundFloat(20.0/scaleJust9, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(E, NewSimpleNote(D, 10)), 2), roundFloat(20.0/scaleJust10, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(E, NewSimpleNote(Dis, 10)), 2), roundFloat(20.0/scaleJust11, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(F, NewSimpleNote(F, 10)), 2), roundFloat(10.0, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(F, NewSimpleNote(Fis, 10)), 2), roundFloat(10.0/scaleJust1, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(F, NewSimpleNote(G, 10)), 2), roundFloat(10.0/scaleJust2, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(F, NewSimpleNote(Gis, 10)), 2), roundFloat(10.0/scaleJust3, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(F, NewSimpleNote(A, 10)), 2), roundFloat(10.0/scaleJust4, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(F, NewSimpleNote(Ais, 10)), 2), roundFloat(10.0/scaleJust5, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(F, NewSimpleNote(B, 10)), 2), roundFloat(10.0/scaleJust6, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(F, NewSimpleNote(C, 10)), 2), roundFloat(20.0/scaleJust7, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(F, NewSimpleNote(Cis, 10)), 2), roundFloat(20.0/scaleJust8, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(F, NewSimpleNote(D, 10)), 2), roundFloat(20.0/scaleJust9, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(F, NewSimpleNote(Dis, 10)), 2), roundFloat(20.0/scaleJust10, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(F, NewSimpleNote(E, 10)), 2), roundFloat(20.0/scaleJust11, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Fis, NewSimpleNote(Fis, 10)), 2), roundFloat(10.0, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Fis, NewSimpleNote(G, 10)), 2), roundFloat(10.0/scaleJust1, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Fis, NewSimpleNote(Gis, 10)), 2), roundFloat(10.0/scaleJust2, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Fis, NewSimpleNote(A, 10)), 2), roundFloat(10.0/scaleJust3, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Fis, NewSimpleNote(Ais, 10)), 2), roundFloat(10.0/scaleJust4, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Fis, NewSimpleNote(B, 10)), 2), roundFloat(10.0/scaleJust5, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Fis, NewSimpleNote(C, 10)), 2), roundFloat(20.0/scaleJust6, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Fis, NewSimpleNote(Cis, 10)), 2), roundFloat(20.0/scaleJust7, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Fis, NewSimpleNote(D, 10)), 2), roundFloat(20.0/scaleJust8, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Fis, NewSimpleNote(Dis, 10)), 2), roundFloat(20.0/scaleJust9, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Fis, NewSimpleNote(E, 10)), 2), roundFloat(20.0/scaleJust10, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Fis, NewSimpleNote(F, 10)), 2), roundFloat(20.0/scaleJust11, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(G, NewSimpleNote(G, 10)), 2), roundFloat(10.0, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(G, NewSimpleNote(Gis, 10)), 2), roundFloat(10.0/scaleJust1, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(G, NewSimpleNote(A, 10)), 2), roundFloat(10.0/scaleJust2, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(G, NewSimpleNote(Ais, 10)), 2), roundFloat(10.0/scaleJust3, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(G, NewSimpleNote(B, 10)), 2), roundFloat(10.0/scaleJust4, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(G, NewSimpleNote(C, 10)), 2), roundFloat(20.0/scaleJust5, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(G, NewSimpleNote(Cis, 10)), 2), roundFloat(20.0/scaleJust6, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(G, NewSimpleNote(D, 10)), 2), roundFloat(20.0/scaleJust7, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(G, NewSimpleNote(Dis, 10)), 2), roundFloat(20.0/scaleJust8, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(G, NewSimpleNote(E, 10)), 2), roundFloat(20.0/scaleJust9, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(G, NewSimpleNote(F, 10)), 2), roundFloat(20.0/scaleJust10, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(G, NewSimpleNote(Fis, 10)), 2), roundFloat(20.0/scaleJust11, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Gis, NewSimpleNote(Gis, 10)), 2), roundFloat(10.0, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Gis, NewSimpleNote(A, 10)), 2), roundFloat(10.0/scaleJust1, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Gis, NewSimpleNote(Ais, 10)), 2), roundFloat(10.0/scaleJust2, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Gis, NewSimpleNote(B, 10)), 2), roundFloat(10.0/scaleJust3, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Gis, NewSimpleNote(C, 10)), 2), roundFloat(20.0/scaleJust4, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Gis, NewSimpleNote(Cis, 10)), 2), roundFloat(20.0/scaleJust5, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Gis, NewSimpleNote(D, 10)), 2), roundFloat(20.0/scaleJust6, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Gis, NewSimpleNote(Dis, 10)), 2), roundFloat(20.0/scaleJust7, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Gis, NewSimpleNote(E, 10)), 2), roundFloat(20.0/scaleJust8, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Gis, NewSimpleNote(F, 10)), 2), roundFloat(20.0/scaleJust9, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Gis, NewSimpleNote(Fis, 10)), 2), roundFloat(20.0/scaleJust10, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Gis, NewSimpleNote(G, 10)), 2), roundFloat(20.0/scaleJust11, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(A, NewSimpleNote(A, 10)), 2), roundFloat(10.0, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(A, NewSimpleNote(Ais, 10)), 2), roundFloat(10.0/scaleJust1, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(A, NewSimpleNote(B, 10)), 2), roundFloat(10.0/scaleJust2, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(A, NewSimpleNote(C, 10)), 2), roundFloat(20.0/scaleJust3, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(A, NewSimpleNote(Cis, 10)), 2), roundFloat(20.0/scaleJust4, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(A, NewSimpleNote(D, 10)), 2), roundFloat(20.0/scaleJust5, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(A, NewSimpleNote(Dis, 10)), 2), roundFloat(20.0/scaleJust6, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(A, NewSimpleNote(E, 10)), 2), roundFloat(20.0/scaleJust7, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(A, NewSimpleNote(F, 10)), 2), roundFloat(20.0/scaleJust8, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(A, NewSimpleNote(Fis, 10)), 2), roundFloat(20.0/scaleJust9, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(A, NewSimpleNote(G, 10)), 2), roundFloat(20.0/scaleJust10, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(A, NewSimpleNote(Gis, 10)), 2), roundFloat(20.0/scaleJust11, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Ais, NewSimpleNote(Ais, 10)), 2), roundFloat(10.0, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Ais, NewSimpleNote(B, 10)), 2), roundFloat(10.0/scaleJust1, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Ais, NewSimpleNote(C, 10)), 2), roundFloat(20/scaleJust2, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Ais, NewSimpleNote(Cis, 10)), 2), roundFloat(20.0/scaleJust3, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Ais, NewSimpleNote(D, 10)), 2), roundFloat(20.0/scaleJust4, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Ais, NewSimpleNote(Dis, 10)), 2), roundFloat(20.0/scaleJust5, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Ais, NewSimpleNote(E, 10)), 2), roundFloat(20.0/scaleJust6, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Ais, NewSimpleNote(F, 10)), 2), roundFloat(20.0/scaleJust7, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Ais, NewSimpleNote(Fis, 10)), 2), roundFloat(20.0/scaleJust8, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Ais, NewSimpleNote(G, 10)), 2), roundFloat(20.0/scaleJust9, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Ais, NewSimpleNote(Gis, 10)), 2), roundFloat(20.0/scaleJust10, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(Ais, NewSimpleNote(A, 10)), 2), roundFloat(20.0/scaleJust11, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(B, NewSimpleNote(B, 10)), 2), roundFloat(10.0, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(B, NewSimpleNote(C, 10)), 2), roundFloat(20.0/scaleJust1, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(B, NewSimpleNote(Cis, 10)), 2), roundFloat(20.0/scaleJust2, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(B, NewSimpleNote(D, 10)), 2), roundFloat(20.0/scaleJust3, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(B, NewSimpleNote(Dis, 10)), 2), roundFloat(20.0/scaleJust4, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(B, NewSimpleNote(E, 10)), 2), roundFloat(20.0/scaleJust5, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(B, NewSimpleNote(F, 10)), 2), roundFloat(20.0/scaleJust6, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(B, NewSimpleNote(Fis, 10)), 2), roundFloat(20.0/scaleJust7, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(B, NewSimpleNote(G, 10)), 2), roundFloat(20.0/scaleJust8, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(B, NewSimpleNote(Gis, 10)), 2), roundFloat(20.0/scaleJust9, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(B, NewSimpleNote(A, 10)), 2), roundFloat(20.0/scaleJust10, 2), t)
	tu.AssertEq(roundFloat(FrequencyOfBaseNoteInJustScale(B, NewSimpleNote(Ais, 10)), 2), roundFloat(20.0/scaleJust11, 2), t)
}

func TestIntervalToCents(t *testing.T) {
	tu.AssertEq(intervalToCents(1), 0.0, t)
	tu.AssertEq(intervalToCents(2), 1200.0, t)
	tu.AssertEq(intervalToCents(0.5), -1200.0, t)
	tu.AssertEq(roundFloat(intervalToCents(2.5), 2), 1586.31, t)
}

func intervalToCents(interval float64) float64 {
	return math.Log(interval) / log2 * 1200
}

func Test_JustScaleFromBaseNote(t *testing.T) {
	n := JustScaleFromBaseNote(264)
	tu.AssertEq(n[0], 264, t)
	tu.AssertEq(n[1], 281.6, t)
	tu.AssertEq(n[2], 297, t)
	tu.AssertEq(n[3], 316.8, t)
	tu.AssertEq(n[4], 330, t)
	tu.AssertEq(n[5], 352, t)
	tu.AssertEq(n[6], 371.25, t)
	tu.AssertEq(n[7], 396, t)
	tu.AssertEq(n[8], 422.4, t)
	tu.AssertEq(n[9], 440, t)
	tu.AssertEq(n[10], 475.2, t)
	tu.AssertEq(n[11], 495, t)
}

func Test_JustScaleFromBaseNoteWithinOctave(t *testing.T) {
	nC := JustScaleFromBaseNoteWithinOctave(NewSimpleNote(C, 264))
	tu.AssertEq(len(nC), 12, t)
	tu.AssertEq(nC[0], NewSimpleNote(C, 264), t)
	tu.AssertEq(nC[1], NewSimpleNote(Cis, 281.6), t)
	tu.AssertEq(nC[2], NewSimpleNote(D, 297), t)
	tu.AssertEq(nC[3], NewSimpleNote(Dis, 316.8), t)
	tu.AssertEq(nC[4], NewSimpleNote(E, 330), t)
	tu.AssertEq(nC[5], NewSimpleNote(F, 352), t)
	tu.AssertEq(nC[6], NewSimpleNote(Fis, 371.25), t)
	tu.AssertEq(nC[7], NewSimpleNote(G, 396), t)
	tu.AssertEq(nC[8], NewSimpleNote(Gis, 422.4), t)
	tu.AssertEq(nC[9], NewSimpleNote(A, 440), t)
	tu.AssertEq(nC[10], NewSimpleNote(Ais, 475.2), t)
	tu.AssertEq(nC[11], NewSimpleNote(B, 495), t)

	nCis := JustScaleFromBaseNoteWithinOctave(NewSimpleNote(Cis, 264))
	tu.AssertEq(len(nCis), 12, t)
	tu.AssertEq(nCis[0], NewSimpleNote(Cis, 264), t)
	tu.AssertEq(nCis[1], NewSimpleNote(D, 281.6), t)
	tu.AssertEq(nCis[2], NewSimpleNote(Dis, 297), t)
	tu.AssertEq(nCis[3], NewSimpleNote(E, 316.8), t)
	tu.AssertEq(nCis[4], NewSimpleNote(F, 330), t)
	tu.AssertEq(nCis[5], NewSimpleNote(Fis, 352), t)
	tu.AssertEq(nCis[6], NewSimpleNote(G, 371.25), t)
	tu.AssertEq(nCis[7], NewSimpleNote(Gis, 396), t)
	tu.AssertEq(nCis[8], NewSimpleNote(A, 422.4), t)
	tu.AssertEq(nCis[9], NewSimpleNote(Ais, 440), t)
	tu.AssertEq(nCis[10], NewSimpleNote(B, 475.2), t)
	tu.AssertEq(nCis[11], NewSimpleNote(C, 495.0/2), t)

	nE := JustScaleFromBaseNoteWithinOctave(NewSimpleNote(E, 264))
	tu.AssertEq(len(nC), 12, t)
	tu.AssertEq(nE[0], NewSimpleNote(E, 264), t)
	tu.AssertEq(nE[1], NewSimpleNote(F, 281.6), t)
	tu.AssertEq(nE[2], NewSimpleNote(Fis, 297), t)
	tu.AssertEq(nE[3], NewSimpleNote(G, 316.8), t)
	tu.AssertEq(nE[4], NewSimpleNote(Gis, 330), t)
	tu.AssertEq(nE[5], NewSimpleNote(A, 352), t)
	tu.AssertEq(nE[6], NewSimpleNote(Ais, 371.25), t)
	tu.AssertEq(nE[7], NewSimpleNote(B, 396), t)
	tu.AssertEq(nE[8], NewSimpleNote(C, 422.4/2), t)
	tu.AssertEq(nE[9], NewSimpleNote(Cis, 440/2), t)
	tu.AssertEq(nE[10], NewSimpleNote(D, 475.2/2), t)
	tu.AssertEq(nE[11], NewSimpleNote(Dis, 495.0/2), t)

	nGis := JustScaleFromBaseNoteWithinOctave(NewSimpleNote(Gis, 264.0))
	tu.AssertEq(len(nC), 12, t)
	tu.AssertEq(nGis[0], NewSimpleNote(Gis, 264.0), t)
	tu.AssertEq(nGis[1], NewSimpleNote(A, 281.6), t)
	tu.AssertEq(nGis[2], NewSimpleNote(Ais, 297), t)
	tu.AssertEq(nGis[3], NewSimpleNote(B, 316.8), t)
	tu.AssertEq(nGis[4], NewSimpleNote(C, 330.0/2), t)
	tu.AssertEq(nGis[5], NewSimpleNote(Cis, 352.0/2), t)
	tu.AssertEq(nGis[6], NewSimpleNote(D, 371.25/2), t)
	tu.AssertEq(nGis[7], NewSimpleNote(Dis, 396.0/2), t)
	tu.AssertEq(nGis[8], NewSimpleNote(E, 422.4/2), t)
	tu.AssertEq(nGis[9], NewSimpleNote(F, 440/2), t)
	tu.AssertEq(nGis[10], NewSimpleNote(Fis, 475.2/2), t)
	tu.AssertEq(nGis[11], NewSimpleNote(G, 495.0/2), t)

	nB := JustScaleFromBaseNoteWithinOctave(NewSimpleNote(B, 264))
	tu.AssertEq(len(nB), 12, t)
	tu.AssertEq(nB[0], NewSimpleNote(B, 264), t)
	tu.AssertEq(nB[1], NewSimpleNote(C, 281.6/2), t)
	tu.AssertEq(nB[2], NewSimpleNote(Cis, 297.0/2), t)
	tu.AssertEq(nB[3], NewSimpleNote(D, 316.8/2), t)
	tu.AssertEq(nB[4], NewSimpleNote(Dis, 330.0/2), t)
	tu.AssertEq(nB[5], NewSimpleNote(E, 352.0/2), t)
	tu.AssertEq(nB[6], NewSimpleNote(F, 371.25/2), t)
	tu.AssertEq(nB[7], NewSimpleNote(Fis, 396.0/2), t)
	tu.AssertEq(nB[8], NewSimpleNote(G, 422.4/2), t)
	tu.AssertEq(nB[9], NewSimpleNote(Gis, 440.0/2), t)
	tu.AssertEq(nB[10], NewSimpleNote(A, 475.2/2), t)
	tu.AssertEq(nB[11], NewSimpleNote(Ais, 495.0/2), t)
}
